name: Deploy Lambda

on:
  workflow_call:
    inputs:
      deploy_environment:
        description: "Environment where app will be deployed"
        required: false
        type: string
        default: "dev"
      app_name:
        description: "Lambda name"
        required: true
        type: string
      app_version:
        description: "Version"
        required: true
        type: string
      infra_repo:
        description: "Remote infrastructure repo"
        required: false
        type: string
        default: 'orbitmi/infra-live-apps'
      event_type:
        description: "Remote workflow event type"
        required: false
        type: string
        default: "update_lambda"
      dry_run:
        description: "Dry run"
        type: string
        default: 'false'
        required: false
      s3_bucket:
        description: "Bucket name where lambda code is uploaded"
        type: string
        default: 'orbit-artifacts'
        required: false
      is_finished:
        description: "Wait for called event to finish"
        required: false
        type: boolean
        default: true
    secrets:
      gh_token:
        required: true

permissions:
  id-token: none
  issues: write
  pull-requests: write
  contents: read


jobs:
  auto_deploy:
    name: Run Repository Dispatcher
    runs-on: [ubuntu-latest]
    steps:
      - name: Trigger deploy
        uses: htec-infra/gha-utils/actions/repo-dispatch@v0.3.7
        with:
          gh_token: ${{ secrets.gh_token }}
          repository: ${{ inputs.infra_repo }}
          event_type: ${{ inputs.event_type }}
          client_payload: '{"env": "${{ inputs.deploy_environment }}", "name": "${{ inputs.app_name || steps.repo_data.outputs.repo_name }}", "s3_zip_file": "${{  inputs.app_version }}.zip", "s3_bucket": "${{ inputs.s3_bucket }}", "dry_run": "${{ inputs.dry_run }}"}'
          wait: ${{ inputs.is_finished }}
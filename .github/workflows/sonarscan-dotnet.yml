name: Sonar scan

on:
  workflow_call:
    inputs:
      dotnet_version:
        type: string
        default: '6.0.x'
        required: false
      java_version:
        type: string
        default: '11'
        required: false
      build_dir:
        type: string
        default: "./"
        required: false
      repo_name:
        required: false
        type: string 
      org_name:
        required: false
        type: string
      uses_private_repo:
        description: "If the specific project is using libs from the private NuGet registry this must be set to true"
        required: false
        type: string
        default: 'false'
    secrets:
      sonar_token:
        required: true
      gh_token:
        required: true

permissions:
  packages: read
  contents: read

jobs:
  sonarcloud:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          token:  ${{ secrets.gh_token }}
      - name: Get repo data
        id: repo_data
        uses: orbitmi/gha-utils/actions/repo-data@v0.3.8
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet_version }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '${{ inputs.java_version }}'
      - name: Install Sonar global tool
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Begin Sonar scan
        run: dotnet sonarscanner begin /k:"${{ inputs.org_name || steps.repo_data.outputs.org_name }}_${{ inputs.repo_name || steps.repo_data.outputs.repo_name }}" /d:sonar.login=${{ secrets.sonar_token }} /d:sonar.host.url=https://sonarcloud.io /o:${{ inputs.org_name || steps.repo_data.outputs.org_name }}
      - name: Download libs from NuGet registry and build solution
        id: download_libs
        if: inputs.uses_private_repo != 'false'
        run: |
          SOLUTION_FILE="$(find "${{ inputs.build_dir }}" -name "*.sln" | head -1)"
          dotnet nuget add source "https://nuget.pkg.github.com/orbitmi/index.json" --username OrbitCI --password ${{ secrets.gh_token }} --store-password-in-clear-text --name github
          dotnet build "${{ inputs.build_dir }}"
          dotnet nuget remove source github
      - name: Build and run unit tests
        run: dotnet build "${{ inputs.build_dir }}"
      - name: End Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.sonar_token }}